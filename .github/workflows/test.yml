name: Test

on:
  push:

jobs:
  test-worker:
    name: Test worker

    strategy:
      fail-fast: false
      matrix:
        os:
        - 'ubuntu-latest'
        python-version:
        - '3.9'
        - '3.10'
        package:
        - dsw-data-seeder
        - dsw-document-worker
        - dsw-mailer

    runs-on: ${{ matrix.os }}

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: pip
        cache-dependency-path: |
          **/pyproject.toml
          **/requirements*.txt

    - name: Prepare Python env
      run: |
        python -m pip install -U pip setuptools wheel

    - name: Create build info
      run: |
        bash scripts/build-info.sh

    - name: Install dependencies
      run: |
        cd packages/${{ matrix.package }}
        pip install -r requirements.txt
        make local-deps

    - name: Install package
      run: |
        cd packages/${{ matrix.package }}
        pip install .

    - name: Verify installation
      run: |
        cd packages/${{ matrix.package }}
        make verify

    - name: Test package
      run: |
        cd packages/${{ matrix.package }}
        make test

  test-lib:
    name: Test library

    strategy:
      fail-fast: false
      matrix:
        os:
        - 'macos-latest'
        - 'ubuntu-latest'
        - 'windows-latest'
        python-version:
        - '3.9'
        - '3.10'
        package:
        - dsw-command-queue
        - dsw-config
        - dsw-database
        - dsw-storage

    runs-on: ${{ matrix.os }}

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: pip
        cache-dependency-path: |
          **/pyproject.toml
          **/requirements*.txt

    - name: Prepare Python env
      run: |
        python -m pip install -U pip setuptools wheel

    - name: Create build info
      run: |
        bash scripts/build-info.sh

    - name: Install dependencies
      run: |
        cd packages/${{ matrix.package }}
        pip install -r requirements.txt
        make local-deps

    - name: Install package
      run: |
        cd packages/${{ matrix.package }}
        pip install .

    - name: Verify installation
      run: |
        cd packages/${{ matrix.package }}
        make verify

    - name: Test package
      run: |
        cd packages/${{ matrix.package }}
        make test

  test-util:
    name: Test utility

    strategy:
      fail-fast: false
      matrix:
        os:
        - 'macos-latest'
        - 'ubuntu-latest'
        - 'windows-latest'
        python-version:
        - '3.8'
        - '3.9'
        - '3.10'
        package:
        - dsw-tdk

    runs-on: ${{ matrix.os }}

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: pip
        cache-dependency-path: |
          **/pyproject.toml
          **/requirements*.txt

    - name: Prepare Python env
      run: |
        python -m pip install -U pip setuptools wheel

    - name: Create build info
      run: |
        bash scripts/build-info.sh

    - name: Install dependencies
      run: |
        cd packages/${{ matrix.package }}
        pip install -r requirements.txt
        make local-deps

    - name: Install package
      run: |
        cd packages/${{ matrix.package }}
        pip install .

    - name: Verify installation
      run: |
        cd packages/${{ matrix.package }}
        make verify

    - name: Test package
      run: |
        cd packages/${{ matrix.package }}
        make test
